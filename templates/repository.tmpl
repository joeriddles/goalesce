// Code generated by github.com/joeriddles/gorm-oapi-codegen DO NOT EDIT.
package repository

import (
  "context"

  model "github.com/joeriddles/gorm-oapi-codegen/examples/cars" // TODO(joeriddle): make this dynamic
)

type {{.Name}}Repository interface {
  List(
    ctx context.Context,
    filters any,
  ) ([]*model.{{.Name}}, error)

  Get(
    ctx context.Context,
    id int64,
  ) (*model.{{.Name}}, error)
  
  Create(
    ctx context.Context,
    {{.Name|ToLower}} model.{{.Name}},
  ) error
  
  Update(
    ctx context.Context,
    update map[string]interface{},
  ) error
  
  Delete(
    ctx context.Context,
    id int64,
  ) error
}

type _{{.Name}}Repository struct {
}

func New{{.Name}}Repository() {{.Name}}Repository {
  return &_{{.Name}}Repository{}
}

func (r *_{{.Name}}Repository) List(
  ctx context.Context,
  filters any,
) ([]*model.{{.Name}}, error) {
  return nil, nil
}

func (r *_{{.Name}}Repository) Get(
  ctx context.Context,
  id int64,
) (*model.{{.Name}}, error) {
  return nil, nil
}

func (r *_{{.Name}}Repository) Create(
  ctx context.Context,
  {{.Name|ToLower}} model.{{.Name}},
) error {
  return nil
}

func (r *_{{.Name}}Repository) Update(
  ctx context.Context,
  update map[string]interface{},
) error {
  return nil
}

func (r *_{{.Name}}Repository) Delete(
  ctx context.Context,
  id int64,
) error {
  return nil
}
